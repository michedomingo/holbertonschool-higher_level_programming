The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``3-say_my_name`` module:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:

    Print valid first_name and last_name.
    >>> say_my_name("Walter", "White")
    My name is Walter White

    Print valid first_name only.
    >>> say_my_name("Bob")
    My name is Bob 

    ******************************
    * first_name and last_name must be strings
    * TypeError: first_name must be a string
    * TypeError: last_name must be a string
    ******************************

    Print integer and valid last_name.
    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string


    Print valid first_name with None.
    >>> say_my_name("Jon", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

    Print without arguments.
    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
