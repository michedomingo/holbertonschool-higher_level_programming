The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    Add two positive integers. Return positive integer sum.
    >>> add_integer(1, 2)
    3

    Add two negative integers. Return negative integer sum.
    >>> add_integer(-1, -2)
    -3

    Add a negative and a positive integer. Return integer sum.
    >>> add_integer(-100, 2)
    -98

    Add a positive and a negative integer. Return integer sum.
    >>> add_integer(100, -2)
    98

    Provide 1st argument integer (a). 2nd argument (b) is given via prototype (98). Return sum.
    >>> add_integer(2)
    100

    ******************************
    * a and b must be first casted to integers if they are float
    * OverflowError: cannot convert float infinity to integer
    ******************************

    Add two floats. Return integer sum.
    >>> add_integer(1.1, 2.1)
    3

    Add float and integer. Return integer sum.
    >>> add_integer(100.3, -2)
    98

    Add infinite float. Return error.
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    ******************************
    * a and b must be integers or floats
    * TypeError: a must be an integer
    * TypeError: b must be an integer
    ******************************

    Add None. Return error.
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    Add NaN. Return error.
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    Provide list as 2nd argument (b). Return error.
    >>> add_integer(4, [1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    Add integer and string. Return error.
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
